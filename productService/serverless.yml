# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: thuongtt97
# "service" is the name of this project. This will also be added to your AWS resource names.
service: productService

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-1
  environment:
    BUCKET_NAME: ecommerce-dev-products
    DYNAMO_TABLE: Products
    SNS_TOPIC_ARN: arn:aws:sns:ap-southeast-1:021891614965:ProductCleanupTopic
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: arn:aws:s3:::ecommerce-dev-products/*
    - Effect: Allow
      Action:
        - dynamoDb:PutItem
        - dynamoDb:UpdateItem
        - dynamoDb:Scan
        - dynamoDb:DeleteItem
      Resource: arn:aws:dynamodb:ap-southeast-1:021891614965:table/Products
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: arn:aws:sns:ap-southeast-1:021891614965:ProductCleanupTopic
      
  httpApi:
    authorizers:
      myCognitoAuth: #Custom name for Cognito Authorization(used in routes)
        identitySource: $request.header.Authorization #Extract JWT token from Authorization
        #header (used for validation)
        issuerUrl: https://cognito-idp.ap-southeast-1.amazonaws.com/ap-southeast-1_Kx65YKYXy
        #Url of your Cognito user pool(Needed to  verify tokens).
        audience:
          - 19pg1k8ns62j50bvnjn8blfcqf
          #Cognito App client ID(ensures tokens come from the right app).

resources:
  Resources:
    ProductImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ecommerce-dev-products

    ProductTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Products
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    ProductCleanupTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ProductCleanupTopic  

    ProductCleanupSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: arn:aws:sns:ap-southeast-1:021891614965:ProductCleanupTopic
        Protocol: email
        Endpoint: thuongtt@vnext.vn

functions:
  getUploadUrl:
    handler: handlers/getUploadUrl.getUploadUrl
    events:
      - httpApi:
          path: /get-upload-url
          method: post
          authorizer:
            name: myCognitoAuth
  updateProductImage:
    handler: handlers/updateProductImage.updateProductImage
    events:
      - s3:
          bucket: product-images-famous-macaulay-12340
          event: s3:ObjectCreated:Put #Trigger event when a new object is uplaod
          existing: true #ensures the function works with  an existing bucket